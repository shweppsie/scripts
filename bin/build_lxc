#!/bin/bash

# enable bash debugging
#set -x

if [ "`which virsh`" == "" ]; then
	echo "Can't find virsh! Is this the right machine?"
	exit 1
fi

dir="/img"
user="nathan"
uid="`id -u ${user}`"

if [ $# -ne 3 ]
then
	echo "Usage: $0 NAME IPADDRESS RELEASE"
	exit 1
fi

if [ $UID -ne 0 ]
then
	echo "Not root!"
	exit 1
fi

name="$1"
address="$2"
release="$3"

dir="${dir}/${name}"

if [[ -x "${dir}" ]]
then
	echo "${dir} already exists!"
	exit 1
fi

CR="chroot ${dir}"

# create a base install
mkdir -p "$dir"
debootstrap ${release} ${dir} http://mirror.byte.net.nz/debian/
if [ $? -ne 0 ]; then
	echo "debootstrap failed"
	exit 1
fi

# build the NZ locale
$CR aptitude --assume-yes install locales
sed -i 's/# \(en_NZ.UTF-8 UTF-8\)/\1/g' ${dir}/etc/locale.gen
$CR locale-gen
$CR update-locale LANG=en_NZ.UTF-8 LANGUAGE=en_NZ:en

# set up interfaces
echo -e "\nauto eth0\niface eth0 inet static\n    address ${address}\n    netmask 255.255.255.0\n    gateway 192.168.100.254" >> ${dir}/etc/network/interfaces

# set up dns
echo -e "domain shweppsie.com\nsearch internal.shweppsie.com shweppsie.com flat.shweppsie.com\nnameserver 192.168.100.254\n" > ${dir}/etc/resolv.conf

# setup hostname
echo "$name" > ${dir}/etc/hostname
echo "127.0.0.1 $name" >> ${dir}/etc/hosts

# install base packages
$CR aptitude update
$CR aptitude -y install sudo less vim openssh-server mlocate

# set the editor to vim
$CR update-alternatives --set editor /usr/bin/vim.basic

# prime the locate database
$CR updatedb

# make sudo work via console
echo -e "\nDefaults visiblepw" >> ${dir}/etc/sudoers

# disable TTYs in inittab on anything other than 1
sed -i 's/^[2-6]:23:respawn:\/sbin\/getty 38400 tty/#\0/' ${dir}/etc/inittab

# comment out kernel logging in rsyslog
sed -i 's/$ModLoad imklog/#$ModLoad imklog/' ${dir}/etc/rsyslog.conf

# add primary user
useradd --root ${dir} --create-home --shell /bin/bash --uid ${uid} ${user} 

# add sudo for primary user
$CR gpasswd --add nathan sudo

# copy user definiton from host
sed -i "/${user}/d" ${dir}/etc/passwd
cat /etc/passwd | grep ${user} >> ${dir}/etc/passwd
sed -i "/${user}/d" ${dir}/etc/shadow
cat /etc/shadow | grep ${user} >> ${dir}/etc/shadow

virt-install --connect lxc:/// \
    --name="${name}" \
	--ram=512 \
	--vcpu=2 \
	--filesystem=${dir},/ \
	--filesystem=/home/,/home/ \
	--network=bridge=bridge-vm \
	--noautoconsole

# make sure the vm is not running now
virsh --connect lxc:/// destroy ${name}

# set VM to autostart
virsh --connect lxc:/// autostart ${name}

# TODO: <target dev='vm-${name}'/>

# start vm
virsh --connect lxc:/// start ${name}

