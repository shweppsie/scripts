#!/usr/bin/env python

# Copyright 2011 Nathan Overall
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# A simple script to count the number of links on files
# to allow you to analyse the effectiveness of your
# backups.

import sys, os

class Links:
	def __init__(self):
		self._links = {}
		self._offenders = {}

	def __str__(self):
		string = ""
		total = 0
		for i in self._links.keys():
			l = self._links[i]
			string += "%s files shared %s links with another file which totalled %s\n" % (l[0], i-1, sizeof_fmt(l[1]))
			total += l[1]
		string += "Files Total: %s" % sizeof_fmt(total)
		return string

	def add(self, link, bytes):
		if link not in self._links:
			self._links[link] = [1,bytes]
		else:
			self._links[link][0] += 1
			self._links[link][1] += bytes

def sizeof_fmt(num):
	for x in ['bytes','KB','MB','GB','TB']:
		if num < 1024.0:
			return "%3.1f%s" % (num, x)
		num /= 1024.0

if len(sys.argv) <= 1:
	print "Usage: %s FOLDER [FOLDER]..." % sys.argv[0]
	sys.exit(1)

for directory in sys.argv[1:]:
	print "Processing: %s" % directory
	links = Links()
	
	for root, folders, files in os.walk(directory):
		for f in files:
			f = os.path.join(root,f)
			if os.path.islink(f):
				continue
			s = os.stat(f)
			links.add(s.st_nlink,s.st_size)

	print str(links)
